#include "voice.hpp"

void voice::play(float freq) {
    signals.clear();
    signals.emplace_back(signal::SINE, freq, 0.0f, 0.5f);
    signals.emplace_back(signal::SQUARE, freq, 0.0f, 0.2f); // optional extra tone
    active = true;
}

void voice::stop() {
    active = false;
    signals.clear();
}

bool voice::isActive() const {
    return active;
}

float voice::nextSample(float sampleRate) {
    if (!active) return 0.0f;

    float sum = 0.0f;
    for (auto& s : signals) {
        sum += s.nextSample(sampleRate);
    }
    return sum;
}
