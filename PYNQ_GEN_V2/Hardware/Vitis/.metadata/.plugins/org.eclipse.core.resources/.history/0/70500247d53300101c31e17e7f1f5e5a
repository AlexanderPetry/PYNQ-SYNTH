#include "xgpio.h"
#include "xparameters.h"
#include "sleep.h"
#include "platform.h"

XGpio lcd;

void lcd_pulse_enable(u8 data) {
    XGpio_DiscreteWrite(&lcd, 2, data | 0x02);  // E high
    usleep(1);
    XGpio_DiscreteWrite(&lcd, 2, data & ~0x02); // E low
    usleep(40);
}

void lcd_send_nibble(u8 nibble, u8 rs) {
    u8 data = (nibble << 2) | (rs & 0x01);  // RS = bit 0, E = bit 1
    lcd_pulse_enable(data);
}

void lcd_send_byte(u8 byte, u8 rs) {
    lcd_send_nibble(byte >> 4, rs);  // upper nibble
    lcd_send_nibble(byte & 0x0F, rs); // lower nibble
}

void lcd_init() {
    XGpio_Initialize(&lcd, XPAR_AXI_GPIO_2_DEVICE_ID);
    XGpio_SetDataDirection(&lcd, 2, 0x00);  // all outputs

    usleep(30000);
    lcd_send_nibble(0x03, 0); usleep(4100);
    lcd_send_nibble(0x03, 0); usleep(100);
    lcd_send_nibble(0x03, 0); lcd_send_nibble(0x02, 0); // 4-bit mode

    lcd_send_byte(0x28, 0); // Function set
    lcd_send_byte(0x0C, 0); // Display ON
    lcd_send_byte(0x06, 0); // Entry mode
    lcd_send_byte(0x01, 0); usleep(3000); // Clear display
}

void lcd_print(const char* str) {
    while (*str) {
        lcd_send_byte(*str++, 1);  // RS = 1
    }
}

int main() {
	init_platform();
    lcd_init();
    lcd_print("Hello World");
    return 0;
}
