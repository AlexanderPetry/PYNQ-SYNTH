#ifndef PERIPHERAL_H
#define PERIPHERAL_H

#include "xuartps.h"
#include "xgpio.h"
#include "stdio.h"

#include "xgpio.h"
#include "xparameters.h"
#include "sleep.h"

#define INT_MAX 2147483647
#define INT_MIN -2147483648

#define I32increment(v, a) \
    do { \
        if ((a) > 0 && (v) > INT_MAX - (a)) \
            (v) = INT_MAX; \
        else if ((a) < 0 && (v) < INT_MIN - (a)) \
            (v) = INT_MIN; \
        else \
            (v) += (a); \
    } while (0)

#define I32decrement(v, a) I32increment((v), -(a))


XUartPs Uart_Ps;


void UART_init();
void ROT_ENC_init();
u32 ROT_ENC_Getvalue();
void ROT_ENC_GetAction();

class Rotary_enc{
public:
private:
	XGpio rotary;
	int counter{0};
	u8 debounce{1};
	u32 PS;
};
#endif
