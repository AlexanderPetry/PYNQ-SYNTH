#pragma once
#include <vector>
#include "signal.hpp"

class voice
{
public:
	void play();
	void stop();
	bool isActive() const;
	float nextSample(float globalPhase, float baseFreq);
	void addSignal(signal s);
	void clear();
	std::vector<signal> signals;

	enum class EnvState { Idle, Attack, Decay, Sustain, Release };
	void updateEnvelope(float deltaTime);

	struct Envelope {
	    float attackTime = 0.1f;
	    float decayTime = 0.1f;
	    float sustainLevel = 0.7f;
	    float releaseTime = 0.2f;
	    float amplitude = 0.0f;
	    EnvState state = EnvState::Idle;
	} env;




};
