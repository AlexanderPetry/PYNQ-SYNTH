#include "xgpio.h"
#include "xparameters.h"
#include "sleep.h"
#include "platform.h"
#include "stdio.h"
#include "xuartps.h"
#include "xgpio.h"

XGpio rotary;

int main() {
    init_platform();

	XUartPs Uart_Ps;
	XUartPs_Config *Config = XUartPs_LookupConfig(XPAR_XUARTPS_0_DEVICE_ID);
	XUartPs_CfgInitialize(&Uart_Ps, Config, Config->BaseAddress);
	XUartPs_SetBaudRate(&Uart_Ps, 115200);
	xil_printf("Ready for input\r\n");

    XGpio_Initialize(&rotary, XPAR_AXI_GPIO_0_DEVICE_ID);
    XGpio_SetDataDirection(&rotary, 1, 0xFFFFFFFF);  // all inputs

    u32 prev = XGpio_DiscreteRead(&rotary, 1);
    int counter = 0;

    while (1) {
        u32 curr = XGpio_DiscreteRead(&rotary, 1);

        u8 sw  = curr & 0x01;
        u8 A  = curr & 0b001;
        u8 B = curr & 0b100;

        u8 B_prev = prev & 0b100;

        if (prev_clk == 1 && clk == 0) { // falling edge
            if (dt) {
                counter++;
                xil_printf("Right | %d\r\n", counter);
            } else {
                counter--;
                xil_printf("Left  | %d\r\n", counter);
            }
        }

        if ((prev >> 2 & 0x01) == 1 && sw == 0) {
            xil_printf("Button pressed\r\n");
        }

        prev = curr;
        usleep(1000); // debounce
    }

    return 0;
}
