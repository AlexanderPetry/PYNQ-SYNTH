// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module waverforms_generic_asin_float_Pipeline_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_ph,
        tz_0_0_0_08_i_out,
        tz_0_0_0_08_i_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [54:0] t_ph;
output  [54:0] tz_0_0_0_08_i_out;
output   tz_0_0_0_08_i_out_ap_vld;

reg ap_idle;
reg tz_0_0_0_08_i_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln114_fu_136_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [6:0] cordic_apfixed_circ_table_arctan_128_address0;
wire   [125:0] cordic_apfixed_circ_table_arctan_128_q0;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] d_fu_180_p2;
reg   [0:0] d_reg_470;
wire   [54:0] x_s_fu_234_p3;
reg   [54:0] x_s_reg_477;
wire   [54:0] y_s_fu_254_p3;
reg   [54:0] y_s_reg_483;
wire   [54:0] sub_ln152_fu_278_p2;
reg   [54:0] sub_ln152_reg_489;
wire   [54:0] sub_ln153_fu_284_p2;
reg   [54:0] sub_ln153_reg_495;
wire   [63:0] zext_ln114_fu_157_p1;
wire    ap_block_pp0_stage0;
reg   [54:0] conv_i_i_i4582_i_fu_62;
wire   [54:0] select_ln154_1_fu_364_p3;
reg   [54:0] ap_sig_allocacmp_conv_i_i_i4582_i_load;
wire    ap_loop_init;
reg   [54:0] conv_i_i_i5225_i_fu_66;
wire   [54:0] select_ln154_fu_357_p3;
reg   [54:0] ap_sig_allocacmp_conv_i_i_i5225_i_load;
reg   [54:0] tz_0_0_0_08_i_fu_70;
wire   [54:0] tz_fu_405_p3;
reg   [5:0] n_fu_74;
wire   [5:0] n_2_fu_142_p2;
reg   [54:0] t_fu_78;
wire   [54:0] t_4_fu_320_p3;
wire    ap_block_pp0_stage0_01001;
reg    cordic_apfixed_circ_table_arctan_128_ce0_local;
wire   [0:0] tmp_fu_166_p3;
wire   [0:0] icmp_ln131_fu_174_p2;
wire   [6:0] zext_ln114_1_fu_162_p1;
wire   [6:0] add_ln147_fu_186_p2;
wire   [0:0] tmp_8_fu_192_p3;
wire   [6:0] sub_ln147_fu_200_p2;
wire   [6:0] select_ln147_fu_206_p3;
wire  signed [31:0] sext_ln147_fu_214_p1;
wire   [54:0] zext_ln147_fu_218_p1;
wire   [54:0] shl_ln147_fu_222_p2;
wire   [54:0] ashr_ln147_fu_228_p2;
wire   [54:0] shl_ln148_fu_242_p2;
wire   [54:0] ashr_ln148_fu_248_p2;
wire   [54:0] zext_ln149_fu_262_p1;
wire   [54:0] x_s2_fu_266_p2;
wire   [54:0] y_s2_fu_272_p2;
wire   [6:0] shl_ln_fu_290_p3;
wire   [54:0] zext_ln167_fu_304_p1;
wire   [54:0] t_s_fu_308_p2;
wire   [0:0] icmp_ln166_fu_298_p2;
wire   [54:0] t_3_fu_314_p2;
wire   [54:0] add_ln155_fu_349_p2;
wire   [54:0] sub_ln159_fu_341_p2;
wire   [54:0] sub_ln156_fu_353_p2;
wire   [54:0] add_ln160_fu_345_p2;
wire   [51:0] tmp_1_fu_371_p4;
wire   [52:0] z_s_fu_381_p3;
wire   [54:0] zext_ln173_fu_389_p1;
wire   [54:0] sub_ln176_fu_393_p2;
wire   [54:0] add_ln179_fu_399_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 conv_i_i_i4582_i_fu_62 = 55'd0;
#0 conv_i_i_i5225_i_fu_66 = 55'd0;
#0 tz_0_0_0_08_i_fu_70 = 55'd0;
#0 n_fu_74 = 6'd0;
#0 t_fu_78 = 55'd0;
#0 ap_done_reg = 1'b0;
end

waverforms_generic_asin_float_Pipeline_1_cordic_apfixed_circ_table_arctan_128_ROM_AUTO_1R #(
    .DataWidth( 126 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
cordic_apfixed_circ_table_arctan_128_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cordic_apfixed_circ_table_arctan_128_address0),
    .ce0(cordic_apfixed_circ_table_arctan_128_ce0_local),
    .q0(cordic_apfixed_circ_table_arctan_128_q0)
);

waverforms_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            conv_i_i_i4582_i_fu_62 <= 55'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            conv_i_i_i4582_i_fu_62 <= select_ln154_1_fu_364_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            conv_i_i_i5225_i_fu_66 <= 55'd4503599627370496;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            conv_i_i_i5225_i_fu_66 <= select_ln154_fu_357_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            n_fu_74 <= 6'd0;
        end else if (((icmp_ln114_fu_136_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            n_fu_74 <= n_2_fu_142_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            t_fu_78 <= t_ph;
        end else if (((icmp_ln114_fu_136_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            t_fu_78 <= t_4_fu_320_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            tz_0_0_0_08_i_fu_70 <= 55'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            tz_0_0_0_08_i_fu_70 <= tz_fu_405_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_reg_470 <= d_fu_180_p2;
        sub_ln152_reg_489 <= sub_ln152_fu_278_p2;
        sub_ln153_reg_495 <= sub_ln153_fu_284_p2;
        x_s_reg_477 <= x_s_fu_234_p3;
        y_s_reg_483 <= y_s_fu_254_p3;
    end
end

always @ (*) begin
    if (((icmp_ln114_fu_136_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_conv_i_i_i4582_i_load = select_ln154_1_fu_364_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_i4582_i_load = conv_i_i_i4582_i_fu_62;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_conv_i_i_i5225_i_load = select_ln154_fu_357_p3;
    end else begin
        ap_sig_allocacmp_conv_i_i_i5225_i_load = conv_i_i_i5225_i_fu_66;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cordic_apfixed_circ_table_arctan_128_ce0_local = 1'b1;
    end else begin
        cordic_apfixed_circ_table_arctan_128_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln114_fu_136_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tz_0_0_0_08_i_out_ap_vld = 1'b1;
    end else begin
        tz_0_0_0_08_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln147_fu_186_p2 = ($signed(zext_ln114_1_fu_162_p1) + $signed(7'd127));

assign add_ln155_fu_349_p2 = (sub_ln152_reg_489 + y_s_reg_483);

assign add_ln160_fu_345_p2 = (sub_ln153_reg_495 + x_s_reg_477);

assign add_ln179_fu_399_p2 = (zext_ln173_fu_389_p1 + tz_0_0_0_08_i_fu_70);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign ashr_ln147_fu_228_p2 = $signed(ap_sig_allocacmp_conv_i_i_i5225_i_load) >>> zext_ln147_fu_218_p1;

assign ashr_ln148_fu_248_p2 = $signed(ap_sig_allocacmp_conv_i_i_i4582_i_load) >>> zext_ln147_fu_218_p1;

assign cordic_apfixed_circ_table_arctan_128_address0 = zext_ln114_fu_157_p1;

assign d_fu_180_p2 = (tmp_fu_166_p3 ^ icmp_ln131_fu_174_p2);

assign icmp_ln114_fu_136_p2 = ((n_fu_74 == 6'd53) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_174_p2 = (($signed(ap_sig_allocacmp_conv_i_i_i4582_i_load) > $signed(t_fu_78)) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_298_p2 = ((shl_ln_fu_290_p3 < 7'd55) ? 1'b1 : 1'b0);

assign n_2_fu_142_p2 = (n_fu_74 + 6'd1);

assign select_ln147_fu_206_p3 = ((tmp_8_fu_192_p3[0:0] == 1'b1) ? sub_ln147_fu_200_p2 : add_ln147_fu_186_p2);

assign select_ln154_1_fu_364_p3 = ((d_reg_470[0:0] == 1'b1) ? sub_ln156_fu_353_p2 : add_ln160_fu_345_p2);

assign select_ln154_fu_357_p3 = ((d_reg_470[0:0] == 1'b1) ? add_ln155_fu_349_p2 : sub_ln159_fu_341_p2);

assign sext_ln147_fu_214_p1 = $signed(select_ln147_fu_206_p3);

assign shl_ln147_fu_222_p2 = ap_sig_allocacmp_conv_i_i_i5225_i_load << zext_ln147_fu_218_p1;

assign shl_ln148_fu_242_p2 = ap_sig_allocacmp_conv_i_i_i4582_i_load << zext_ln147_fu_218_p1;

assign shl_ln_fu_290_p3 = {{n_fu_74}, {1'd0}};

assign sub_ln147_fu_200_p2 = (7'd1 - zext_ln114_1_fu_162_p1);

assign sub_ln152_fu_278_p2 = (ap_sig_allocacmp_conv_i_i_i5225_i_load - x_s2_fu_266_p2);

assign sub_ln153_fu_284_p2 = (ap_sig_allocacmp_conv_i_i_i4582_i_load - y_s2_fu_272_p2);

assign sub_ln156_fu_353_p2 = (sub_ln153_reg_495 - x_s_reg_477);

assign sub_ln159_fu_341_p2 = (sub_ln152_reg_489 - y_s_reg_483);

assign sub_ln176_fu_393_p2 = (tz_0_0_0_08_i_fu_70 - zext_ln173_fu_389_p1);

assign t_3_fu_314_p2 = (t_s_fu_308_p2 + t_fu_78);

assign t_4_fu_320_p3 = ((icmp_ln166_fu_298_p2[0:0] == 1'b1) ? t_3_fu_314_p2 : t_fu_78);

assign t_s_fu_308_p2 = $signed(t_fu_78) >>> zext_ln167_fu_304_p1;

assign tmp_1_fu_371_p4 = {{cordic_apfixed_circ_table_arctan_128_q0[125:74]}};

assign tmp_8_fu_192_p3 = add_ln147_fu_186_p2[32'd6];

assign tmp_fu_166_p3 = ap_sig_allocacmp_conv_i_i_i5225_i_load[32'd54];

assign tz_0_0_0_08_i_out = tz_0_0_0_08_i_fu_70;

assign tz_fu_405_p3 = ((d_reg_470[0:0] == 1'b1) ? sub_ln176_fu_393_p2 : add_ln179_fu_399_p2);

assign x_s2_fu_266_p2 = $signed(x_s_fu_234_p3) >>> zext_ln149_fu_262_p1;

assign x_s_fu_234_p3 = ((tmp_8_fu_192_p3[0:0] == 1'b1) ? shl_ln147_fu_222_p2 : ashr_ln147_fu_228_p2);

assign y_s2_fu_272_p2 = $signed(y_s_fu_254_p3) >>> zext_ln149_fu_262_p1;

assign y_s_fu_254_p3 = ((tmp_8_fu_192_p3[0:0] == 1'b1) ? shl_ln148_fu_242_p2 : ashr_ln148_fu_248_p2);

assign z_s_fu_381_p3 = {{tmp_1_fu_371_p4}, {1'd0}};

assign zext_ln114_1_fu_162_p1 = n_fu_74;

assign zext_ln114_fu_157_p1 = n_fu_74;

assign zext_ln147_fu_218_p1 = $unsigned(sext_ln147_fu_214_p1);

assign zext_ln149_fu_262_p1 = n_2_fu_142_p2;

assign zext_ln167_fu_304_p1 = shl_ln_fu_290_p3;

assign zext_ln173_fu_389_p1 = z_s_fu_381_p3;

endmodule //waverforms_generic_asin_float_Pipeline_1
