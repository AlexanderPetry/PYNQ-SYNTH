-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity waverforms_generic_asin_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_244_p_ce : OUT STD_LOGIC );
end;


architecture behav of waverforms_generic_asin_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_65 : STD_LOGIC_VECTOR (7 downto 0) := "01100101";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_36 : STD_LOGIC_VECTOR (10 downto 0) := "00000110110";
    constant ap_const_lv11_37 : STD_LOGIC_VECTOR (10 downto 0) := "00000110111";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv55_7FFFFFFFFFFFFF : STD_LOGIC_VECTOR (54 downto 0) := "1111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_3FC90FDB : STD_LOGIC_VECTOR (31 downto 0) := "00111111110010010000111111011011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal din_sign_fu_184_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_865 : STD_LOGIC_VECTOR (0 downto 0);
    signal din_exp_fu_192_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal din_exp_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal inabs_1_fu_228_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln80_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_reg_884 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_249_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_888 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_reg_892 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_ph_fu_483_p13 : STD_LOGIC_VECTOR (54 downto 0);
    signal t_ph_reg_897 : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln102_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln102_reg_905 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sub_ln102_fu_521_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal sub_ln102_reg_909 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_11_fu_527_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_914 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln102_1_fu_574_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln102_1_reg_919 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln_fu_678_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_reg_924 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln102_3_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln102_3_reg_929 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln102_fu_702_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal lshr_ln102_reg_934 : STD_LOGIC_VECTOR (54 downto 0);
    signal shl_ln102_fu_718_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal shl_ln102_reg_939 : STD_LOGIC_VECTOR (54 downto 0);
    signal select_ln84_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_generic_asin_float_Pipeline_1_fu_169_ap_start : STD_LOGIC;
    signal grp_generic_asin_float_Pipeline_1_fu_169_ap_done : STD_LOGIC;
    signal grp_generic_asin_float_Pipeline_1_fu_169_ap_idle : STD_LOGIC;
    signal grp_generic_asin_float_Pipeline_1_fu_169_ap_ready : STD_LOGIC;
    signal grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out : STD_LOGIC_VECTOR (54 downto 0);
    signal grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out_ap_vld : STD_LOGIC;
    signal ap_phi_mux_out_phi_fu_149_p14 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_reg_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln755_fu_806_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_generic_asin_float_Pipeline_1_fu_169_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal data_fu_180_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln67_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln67_fu_212_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln_fu_216_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inabs_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal din_sig_fu_202_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln713_fu_263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_279_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln99_fu_289_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln99_1_fu_299_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln99_1_cast_fu_303_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln99_1_fu_311_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_9_fu_271_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln99_fu_315_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln99_fu_267_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln99_fu_293_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln99_2_fu_335_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_345_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln99_1_fu_339_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln99_fu_321_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln99_1_fu_353_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln99_fu_367_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln99_2_fu_383_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal icmp_ln99_3_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln99_fu_387_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln99_3_fu_401_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln99_fu_405_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln99_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_1_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln99_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln99_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_2_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln99_1_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln99_1_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln99_1_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln99_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln99_2_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln99_2_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_ph_fu_483_p6 : STD_LOGIC_VECTOR (54 downto 0);
    signal t_ph_fu_483_p8 : STD_LOGIC_VECTOR (54 downto 0);
    signal t_ph_fu_483_p10 : STD_LOGIC_VECTOR (54 downto 0);
    signal t_ph_fu_483_p11 : STD_LOGIC_VECTOR (54 downto 0);
    signal t_ph_fu_483_p12 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln102_fu_534_p3 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_s_fu_540_p4 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_12_fu_550_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal sext_ln102_fu_558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_562_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln102_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln102_1_fu_578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln102_fu_584_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_590_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln102_2_fu_606_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln102_4_fu_610_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln102_5_fu_616_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal lshr_ln102_2_fu_620_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal and_ln102_1_fu_626_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal icmp_ln102_1_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln102_2_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_644_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_658_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln102_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln102_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln102_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln102_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln102_1_fu_692_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln102_fu_698_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal sub_ln102_2_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln102_1_fu_714_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal cond49_i_i_in_fu_724_p3 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln102_2_fu_729_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln102_3_fu_733_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln102_2_fu_736_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal lshr_ln102_1_fu_742_p4 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_17_fu_756_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln102_3_fu_772_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln102_1_fu_764_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln102_3_fu_777_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln102_4_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_783_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pi_assign_fu_790_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_1_fu_802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln108_fu_811_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_sel1_fu_815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln108_fu_829_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln1_fu_833_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln108_1_fu_841_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_1_fu_845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal t_ph_fu_483_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_ph_fu_483_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_ph_fu_483_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_ph_fu_483_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_ph_fu_483_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component waverforms_generic_asin_float_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_ph : IN STD_LOGIC_VECTOR (54 downto 0);
        tz_0_0_0_08_i_out : OUT STD_LOGIC_VECTOR (54 downto 0);
        tz_0_0_0_08_i_out_ap_vld : OUT STD_LOGIC );
    end component;


    component waverforms_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component waverforms_sparsemux_11_4_55_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (54 downto 0);
        din1 : IN STD_LOGIC_VECTOR (54 downto 0);
        din2 : IN STD_LOGIC_VECTOR (54 downto 0);
        din3 : IN STD_LOGIC_VECTOR (54 downto 0);
        din4 : IN STD_LOGIC_VECTOR (54 downto 0);
        def : IN STD_LOGIC_VECTOR (54 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (54 downto 0) );
    end component;



begin
    grp_generic_asin_float_Pipeline_1_fu_169 : component waverforms_generic_asin_float_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_generic_asin_float_Pipeline_1_fu_169_ap_start,
        ap_done => grp_generic_asin_float_Pipeline_1_fu_169_ap_done,
        ap_idle => grp_generic_asin_float_Pipeline_1_fu_169_ap_idle,
        ap_ready => grp_generic_asin_float_Pipeline_1_fu_169_ap_ready,
        t_ph => t_ph_reg_897,
        tz_0_0_0_08_i_out => grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out,
        tz_0_0_0_08_i_out_ap_vld => grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out_ap_vld);

    sparsemux_11_4_55_1_1_U35 : component waverforms_sparsemux_11_4_55_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "1000",
        din0_WIDTH => 55,
        CASE1 => "0100",
        din1_WIDTH => 55,
        CASE2 => "0010",
        din2_WIDTH => 55,
        CASE3 => "0001",
        din3_WIDTH => 55,
        CASE4 => "0000",
        din4_WIDTH => 55,
        def_WIDTH => 55,
        sel_WIDTH => 4,
        dout_WIDTH => 55)
    port map (
        din0 => ap_const_lv55_0,
        din1 => sext_ln99_fu_367_p1,
        din2 => t_ph_fu_483_p6,
        din3 => t_ph_fu_483_p8,
        din4 => t_ph_fu_483_p10,
        def => t_ph_fu_483_p11,
        sel => t_ph_fu_483_p12,
        dout => t_ph_fu_483_p13);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_return_preg <= out_1_fu_845_p3;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_asin_float_Pipeline_1_fu_169_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_asin_float_Pipeline_1_fu_169_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_generic_asin_float_Pipeline_1_fu_169_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_asin_float_Pipeline_1_fu_169_ap_ready = ap_const_logic_1)) then 
                    grp_generic_asin_float_Pipeline_1_fu_169_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    out_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((din_exp_fu_192_p4 = ap_const_lv8_0)) and not((din_exp_fu_192_p4 = ap_const_lv8_FF)) and (icmp_ln80_fu_237_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                out_reg_144 <= inabs_1_fu_228_p3;
            elsif ((((icmp_ln102_fu_515_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((din_exp_fu_192_p4 = ap_const_lv8_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                out_reg_144 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                out_reg_144 <= select_ln84_fu_852_p3;
            elsif ((not((din_exp_reg_870 = ap_const_lv8_0)) and not((din_exp_reg_870 = ap_const_lv8_FF)) and (icmp_ln102_reg_905 = ap_const_lv1_0) and (tmp_reg_888 = ap_const_lv1_0) and (icmp_ln83_reg_884 = ap_const_lv1_0) and (icmp_ln80_reg_880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                out_reg_144 <= bitcast_ln755_fu_806_p1;
            elsif (((not((din_exp_fu_192_p4 = ap_const_lv8_0)) and not((din_exp_fu_192_p4 = ap_const_lv8_FF)) and (tmp_fu_249_p3 = ap_const_lv1_1) and (icmp_ln83_fu_243_p2 = ap_const_lv1_0) and (icmp_ln80_fu_237_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((din_exp_fu_192_p4 = ap_const_lv8_FF) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                out_reg_144 <= ap_const_lv32_7FFFFFFF;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                din_exp_reg_870 <= data_fu_180_p1(30 downto 23);
                din_sign_reg_865 <= data_fu_180_p1(31 downto 31);
                icmp_ln80_reg_880 <= icmp_ln80_fu_237_p2;
                icmp_ln83_reg_884 <= icmp_ln83_fu_243_p2;
                icmp_ln84_reg_892 <= icmp_ln84_fu_257_p2;
                tmp_reg_888 <= data_fu_180_p1(30 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln102_3_reg_929 <= icmp_ln102_3_fu_686_p2;
                lshr_ln102_reg_934 <= lshr_ln102_fu_702_p2;
                    or_ln_reg_924(0) <= or_ln_fu_678_p3(0);
                shl_ln102_reg_939 <= shl_ln102_fu_718_p2;
                tmp_11_reg_914 <= grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out(54 downto 54);
                trunc_ln102_1_reg_919 <= trunc_ln102_1_fu_574_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln102_reg_905 <= icmp_ln102_fu_515_p2;
                sub_ln102_reg_909 <= sub_ln102_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                t_ph_reg_897 <= t_ph_fu_483_p13;
            end if;
        end if;
    end process;
    or_ln_reg_924(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, din_exp_fu_192_p4, icmp_ln80_fu_237_p2, icmp_ln83_fu_243_p2, tmp_fu_249_p3, icmp_ln102_fu_515_p2, ap_CS_fsm_state4, grp_generic_asin_float_Pipeline_1_fu_169_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((din_exp_fu_192_p4 = ap_const_lv8_0)) and not((din_exp_fu_192_p4 = ap_const_lv8_FF)) and (tmp_fu_249_p3 = ap_const_lv1_0) and (icmp_ln83_fu_243_p2 = ap_const_lv1_0) and (icmp_ln80_fu_237_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((din_exp_fu_192_p4 = ap_const_lv8_0)) and not((din_exp_fu_192_p4 = ap_const_lv8_FF)) and (icmp_ln83_fu_243_p2 = ap_const_lv1_1) and (icmp_ln80_fu_237_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((din_exp_fu_192_p4 = ap_const_lv8_FF) or ((din_exp_fu_192_p4 = ap_const_lv8_0) or ((icmp_ln80_fu_237_p2 = ap_const_lv1_1) or ((tmp_fu_249_p3 = ap_const_lv1_1) and (icmp_ln83_fu_243_p2 = ap_const_lv1_0))))))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_generic_asin_float_Pipeline_1_fu_169_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln102_fu_515_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    LD_1_fu_802_p1 <= pi_assign_fu_790_p5(32 - 1 downto 0);
    add_ln102_1_fu_692_p2 <= std_logic_vector(unsigned(sub_ln102_1_fu_578_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln102_2_fu_736_p2 <= std_logic_vector(unsigned(zext_ln102_2_fu_729_p1) + unsigned(zext_ln102_3_fu_733_p1));
    add_ln102_3_fu_777_p2 <= std_logic_vector(unsigned(sub_ln102_3_fu_772_p2) + unsigned(select_ln102_1_fu_764_p3));
    add_ln102_fu_584_p2 <= std_logic_vector(unsigned(sub_ln102_1_fu_578_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    add_ln99_fu_293_p2 <= std_logic_vector(unsigned(zext_ln99_fu_289_p1) + unsigned(ap_const_lv12_C01));
    and_ln102_1_fu_626_p2 <= (select_ln102_fu_534_p3 and lshr_ln102_2_fu_620_p2);
    and_ln102_fu_666_p2 <= (xor_ln102_fu_652_p2 and tmp_16_fu_658_p3);
    and_ln99_1_fu_447_p2 <= (xor_ln99_1_fu_441_p2 and icmp_ln99_2_fu_371_p2);
    and_ln99_2_fu_453_p2 <= (tmp_10_fu_345_p3 and and_ln99_1_fu_447_p2);
    and_ln99_fu_429_p2 <= (xor_ln99_fu_423_p2 and icmp_ln99_1_fu_361_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_generic_asin_float_Pipeline_1_fu_169_ap_done)
    begin
        if ((grp_generic_asin_float_Pipeline_1_fu_169_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_out_phi_fu_149_p14_assign_proc : process(din_exp_reg_870, icmp_ln80_reg_880, icmp_ln83_reg_884, tmp_reg_888, icmp_ln102_reg_905, out_reg_144, bitcast_ln755_fu_806_p1, ap_CS_fsm_state6)
    begin
        if ((not((din_exp_reg_870 = ap_const_lv8_0)) and not((din_exp_reg_870 = ap_const_lv8_FF)) and (icmp_ln102_reg_905 = ap_const_lv1_0) and (tmp_reg_888 = ap_const_lv1_0) and (icmp_ln83_reg_884 = ap_const_lv1_0) and (icmp_ln80_reg_880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_out_phi_fu_149_p14 <= bitcast_ln755_fu_806_p1;
        else 
            ap_phi_mux_out_phi_fu_149_p14 <= out_reg_144;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state6, out_1_fu_845_p3, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_return <= out_1_fu_845_p3;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    ashr_ln99_fu_405_p2 <= std_logic_vector(shift_right(signed(select_ln99_fu_321_p3),to_integer(unsigned('0' & zext_ln99_3_fu_401_p1(31-1 downto 0)))));
    bit_sel1_fu_815_p3 <= bitcast_ln108_fu_811_p1(31 downto 31);
    bitcast_ln108_1_fu_841_p1 <= xor_ln1_fu_833_p3;
    bitcast_ln108_fu_811_p1 <= ap_phi_mux_out_phi_fu_149_p14;
    bitcast_ln713_fu_263_p1 <= grp_fu_244_p_dout0;
    bitcast_ln755_fu_806_p1 <= LD_1_fu_802_p1;
    cond49_i_i_in_fu_724_p3 <= 
        lshr_ln102_reg_934 when (icmp_ln102_3_reg_929(0) = '1') else 
        shl_ln102_reg_939;
    data_fu_180_p1 <= in_r;
    din_exp_fu_192_p4 <= data_fu_180_p1(30 downto 23);
    din_sig_fu_202_p1 <= data_fu_180_p1(23 - 1 downto 0);
    din_sign_fu_184_p3 <= data_fu_180_p1(31 downto 31);
    grp_fu_244_p_ce <= ap_const_logic_1;
    grp_fu_244_p_din0 <= inabs_1_fu_228_p3;
    grp_generic_asin_float_Pipeline_1_fu_169_ap_start <= grp_generic_asin_float_Pipeline_1_fu_169_ap_start_reg;
    icmp_ln102_1_fu_600_p2 <= "1" when (signed(tmp_14_fu_590_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln102_2_fu_632_p2 <= "0" when (and_ln102_1_fu_626_p2 = ap_const_lv55_0) else "1";
    icmp_ln102_3_fu_686_p2 <= "1" when (signed(add_ln102_fu_584_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln102_fu_515_p2 <= "1" when (grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out = ap_const_lv55_0) else "0";
    icmp_ln80_fu_237_p2 <= "1" when (unsigned(din_exp_fu_192_p4) < unsigned(ap_const_lv8_65)) else "0";
    icmp_ln83_fu_243_p2 <= "1" when (din_exp_fu_192_p4 = ap_const_lv8_7F) else "0";
    icmp_ln84_fu_257_p2 <= "1" when (din_sig_fu_202_p1 = ap_const_lv23_0) else "0";
    icmp_ln99_1_fu_361_p2 <= "1" when (add_ln99_fu_293_p2 = ap_const_lv12_0) else "0";
    icmp_ln99_2_fu_371_p2 <= "1" when (unsigned(select_ln99_1_fu_353_p3) < unsigned(ap_const_lv11_36)) else "0";
    icmp_ln99_3_fu_377_p2 <= "1" when (unsigned(select_ln99_1_fu_353_p3) < unsigned(ap_const_lv11_37)) else "0";
    icmp_ln99_fu_329_p2 <= "1" when (trunc_ln99_fu_267_p1 = ap_const_lv63_0) else "0";
    inabs_1_fu_228_p3 <= 
        inabs_fu_224_p1 when (din_sign_fu_184_p3(0) = '1') else 
        in_r;
    inabs_fu_224_p1 <= xor_ln_fu_216_p3;
    lshr_ln102_1_fu_742_p4 <= add_ln102_2_fu_736_p2(55 downto 1);
    lshr_ln102_2_fu_620_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv55_7FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln102_5_fu_616_p1(31-1 downto 0)))));
    lshr_ln102_fu_702_p2 <= std_logic_vector(shift_right(unsigned(select_ln102_fu_534_p3),to_integer(unsigned('0' & zext_ln102_fu_698_p1(31-1 downto 0)))));
    or_ln102_fu_672_p2 <= (phi_ln102_fu_638_p2 or and_ln102_fu_666_p2);
    or_ln99_1_fu_459_p2 <= (tmp_10_fu_345_p3 or or_ln99_fu_435_p2);
    or_ln99_fu_435_p2 <= (icmp_ln99_fu_329_p2 or icmp_ln99_1_fu_361_p2);
    or_ln_fu_678_p3 <= (ap_const_lv1_0 & or_ln102_fu_672_p2);
    out_1_fu_845_p3 <= 
        bitcast_ln108_1_fu_841_p1 when (din_sign_reg_865(0) = '1') else 
        ap_phi_mux_out_phi_fu_149_p14;
    phi_ln102_fu_638_p2 <= (icmp_ln102_2_fu_632_p2 and icmp_ln102_1_fu_600_p2);
    pi_assign_fu_790_p5 <= (zext_ln102_4_fu_752_p1(63 downto 32) & tmp_3_fu_783_p3 & zext_ln102_4_fu_752_p1(22 downto 0));
    select_ln102_1_fu_764_p3 <= 
        ap_const_lv8_7F when (tmp_17_fu_756_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln102_fu_534_p3 <= 
        sub_ln102_reg_909 when (tmp_11_fu_527_p3(0) = '1') else 
        grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out;
    select_ln84_fu_852_p3 <= 
        ap_const_lv32_3FC90FDB when (icmp_ln84_reg_892(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    select_ln99_1_fu_353_p3 <= 
        sub_ln99_1_fu_339_p2 when (tmp_10_fu_345_p3(0) = '1') else 
        trunc_ln99_2_fu_335_p1;
    select_ln99_fu_321_p3 <= 
        sub_ln99_fu_315_p2 when (tmp_9_fu_271_p3(0) = '1') else 
        zext_ln99_1_fu_311_p1;
        sext_ln102_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_550_p3),64));

        sext_ln99_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln99_fu_321_p3),55));

    shl_ln102_fu_718_p2 <= std_logic_vector(shift_left(unsigned(select_ln102_fu_534_p3),to_integer(unsigned('0' & zext_ln102_1_fu_714_p1(31-1 downto 0)))));
    shl_ln99_fu_387_p2 <= std_logic_vector(shift_left(unsigned(sext_ln99_fu_367_p1),to_integer(unsigned('0' & zext_ln99_2_fu_383_p1(31-1 downto 0)))));
    sub_ln102_1_fu_578_p2 <= std_logic_vector(unsigned(ap_const_lv32_37) - unsigned(trunc_ln102_fu_570_p1));
    sub_ln102_2_fu_708_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln102_1_fu_578_p2));
    sub_ln102_3_fu_772_p2 <= std_logic_vector(unsigned(ap_const_lv8_3) - unsigned(trunc_ln102_1_reg_919));
    sub_ln102_4_fu_610_p2 <= std_logic_vector(unsigned(ap_const_lv6_10) - unsigned(trunc_ln102_2_fu_606_p1));
    sub_ln102_fu_521_p2 <= std_logic_vector(unsigned(ap_const_lv55_0) - unsigned(grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out));
    sub_ln99_1_fu_339_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(trunc_ln99_2_fu_335_p1));
    sub_ln99_fu_315_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln99_1_fu_311_p1));
    t_ph_fu_483_p10 <= 
        ap_const_lv55_7FFFFFFFFFFFFF when (tmp_9_fu_271_p3(0) = '1') else 
        ap_const_lv55_0;
    t_ph_fu_483_p11 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    t_ph_fu_483_p12 <= (((icmp_ln99_fu_329_p2 & and_ln99_fu_429_p2) & and_ln99_2_fu_453_p2) & xor_ln99_2_fu_465_p2);
        t_ph_fu_483_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(ashr_ln99_fu_405_p2),55));

    t_ph_fu_483_p8 <= 
        shl_ln99_fu_387_p2 when (icmp_ln99_3_fu_377_p2(0) = '1') else 
        ap_const_lv55_0;
    tmp_10_fu_345_p3 <= add_ln99_fu_293_p2(11 downto 11);
    tmp_11_fu_527_p3 <= grp_generic_asin_float_Pipeline_1_fu_169_tz_0_0_0_08_i_out(54 downto 54);
    tmp_12_fu_550_p3 <= (ap_const_lv1_1 & tmp_s_fu_540_p4);
    
    tmp_13_fu_562_p3_proc : process(sext_ln102_fu_558_p1)
    begin
        tmp_13_fu_562_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if sext_ln102_fu_558_p1(i) = '1' then
                tmp_13_fu_562_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_14_fu_590_p4 <= add_ln102_fu_584_p2(31 downto 1);
    tmp_15_fu_644_p3 <= add_ln102_fu_584_p2(31 downto 31);
    tmp_16_fu_658_p3 <= select_ln102_fu_534_p3(to_integer(unsigned(add_ln102_fu_584_p2)) downto to_integer(unsigned(add_ln102_fu_584_p2))) when (to_integer(unsigned(add_ln102_fu_584_p2)) >= 0 and to_integer(unsigned(add_ln102_fu_584_p2)) <=54) else "-";
    tmp_17_fu_756_p3 <= add_ln102_2_fu_736_p2(25 downto 25);
    tmp_3_fu_783_p3 <= (tmp_11_reg_914 & add_ln102_3_fu_777_p2);
    tmp_6_fu_279_p4 <= bitcast_ln713_fu_263_p1(62 downto 52);
    tmp_9_fu_271_p3 <= bitcast_ln713_fu_263_p1(63 downto 63);
    tmp_fu_249_p3 <= data_fu_180_p1(30 downto 30);
    
    tmp_s_fu_540_p4_proc : process(select_ln102_fu_534_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(55+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(55+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(55 - 1 downto 0);
    variable tmp_s_fu_540_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(55 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(55 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(55 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_36(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := select_ln102_fu_534_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(55-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(55-1-unsigned(ap_const_lv32_36(6-1 downto 0)));
            for tmp_s_fu_540_p4_i in 0 to 55-1 loop
                v0_cpy(tmp_s_fu_540_p4_i) := select_ln102_fu_534_p3(55-1-tmp_s_fu_540_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(55-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_s_fu_540_p4 <= resvalue(55-1 downto 0);
    end process;

    trunc_ln102_1_fu_574_p1 <= tmp_13_fu_562_p3(8 - 1 downto 0);
    trunc_ln102_2_fu_606_p1 <= sub_ln102_1_fu_578_p2(6 - 1 downto 0);
    trunc_ln102_fu_570_p1 <= tmp_13_fu_562_p3(32 - 1 downto 0);
    trunc_ln108_fu_829_p1 <= bitcast_ln108_fu_811_p1(31 - 1 downto 0);
    trunc_ln67_fu_212_p1 <= data_fu_180_p1(31 - 1 downto 0);
    trunc_ln99_1_fu_299_p1 <= bitcast_ln713_fu_263_p1(52 - 1 downto 0);
    trunc_ln99_2_fu_335_p1 <= add_ln99_fu_293_p2(11 - 1 downto 0);
    trunc_ln99_fu_267_p1 <= bitcast_ln713_fu_263_p1(63 - 1 downto 0);
    xor_ln102_fu_652_p2 <= (tmp_15_fu_644_p3 xor ap_const_lv1_1);
    xor_ln108_fu_823_p2 <= (bit_sel1_fu_815_p3 xor ap_const_lv1_1);
    xor_ln1_fu_833_p3 <= (xor_ln108_fu_823_p2 & trunc_ln108_fu_829_p1);
    xor_ln67_fu_206_p2 <= (din_sign_fu_184_p3 xor ap_const_lv1_1);
    xor_ln99_1_fu_441_p2 <= (or_ln99_fu_435_p2 xor ap_const_lv1_1);
    xor_ln99_2_fu_465_p2 <= (or_ln99_1_fu_459_p2 xor ap_const_lv1_1);
    xor_ln99_fu_423_p2 <= (icmp_ln99_fu_329_p2 xor ap_const_lv1_1);
    xor_ln_fu_216_p3 <= (xor_ln67_fu_206_p2 & trunc_ln67_fu_212_p1);
    zext_ln102_1_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln102_2_fu_708_p2),55));
    zext_ln102_2_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cond49_i_i_in_fu_724_p3),56));
    zext_ln102_3_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_reg_924),56));
    zext_ln102_4_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln102_1_fu_742_p4),64));
    zext_ln102_5_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln102_4_fu_610_p2),55));
    zext_ln102_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_1_fu_692_p2),55));
    zext_ln99_1_cast_fu_303_p3 <= (ap_const_lv1_1 & trunc_ln99_1_fu_299_p1);
    zext_ln99_1_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln99_1_cast_fu_303_p3),54));
    zext_ln99_2_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln99_1_fu_353_p3),55));
    zext_ln99_3_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln99_1_fu_353_p3),54));
    zext_ln99_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_279_p4),12));
end behav;
