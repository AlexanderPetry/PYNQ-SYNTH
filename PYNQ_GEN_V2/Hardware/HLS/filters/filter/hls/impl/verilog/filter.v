// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="filter_filter,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=15.637000,HLS_SYN_LAT=30,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=575,HLS_SYN_LUT=1353,HLS_VERSION=2024_1}" *)

module filter (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] sample_in;
wire   [31:0] sample_out;
reg    sample_out_ap_vld;
wire   [1:0] filter_type;
reg   [1:0] buffer_r_address0;
reg    buffer_r_ce0;
reg    buffer_r_we0;
reg   [31:0] buffer_r_d0;
wire   [31:0] buffer_r_q0;
reg   [2:0] index;
reg   [1:0] filter_type_read_reg_221;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln35_fu_195_p2;
reg   [0:0] icmp_ln35_reg_227;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln35_1_fu_201_p2;
reg   [0:0] icmp_ln35_1_reg_232;
wire    grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start;
wire    grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_done;
wire    grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_idle;
wire    grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_ready;
wire   [1:0] grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_address0;
wire    grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_ce0;
wire    grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_we0;
wire   [31:0] grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_d0;
wire    grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start;
wire    grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_done;
wire    grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_idle;
wire    grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_ready;
wire   [31:0] grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_acc_out;
wire    grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_acc_out_ap_vld;
wire   [1:0] grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_buffer_r_address0;
wire    grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_buffer_r_ce0;
reg    grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [2:0] select_ln50_fu_181_p3;
wire    ap_CS_fsm_state6;
reg    buffer_r_we0_local;
reg    buffer_r_ce0_local;
wire  signed [2:0] sext_ln50_fu_127_p0;
wire  signed [3:0] sext_ln50_fu_127_p1;
wire   [3:0] add_ln50_fu_131_p2;
wire  signed [2:0] trunc_ln50_1_fu_149_p0;
wire   [1:0] trunc_ln50_1_fu_149_p1;
wire   [1:0] xor_ln50_fu_153_p2;
wire   [2:0] p_and_t_fu_159_p3;
wire   [1:0] trunc_ln50_fu_145_p1;
wire   [0:0] tmp_fu_137_p3;
wire   [2:0] sub_ln50_fu_167_p2;
wire   [2:0] tmp_6_fu_173_p3;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 index = 3'd0;
#0 grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start_reg = 1'b0;
#0 grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start_reg = 1'b0;
end

filter_buffer_r_RAM_1P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
buffer_r_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_r_address0),
    .ce0(buffer_r_ce0),
    .we0(buffer_r_we0),
    .d0(buffer_r_d0),
    .q0(buffer_r_q0)
);

filter_filter_Pipeline_VITIS_LOOP_29_1 grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start),
    .ap_done(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_done),
    .ap_idle(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_idle),
    .ap_ready(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_ready),
    .buffer_r_address0(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_address0),
    .buffer_r_ce0(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_ce0),
    .buffer_r_we0(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_we0),
    .buffer_r_d0(grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_d0),
    .buffer_r_q0(buffer_r_q0)
);

filter_filter_Pipeline_VITIS_LOOP_44_2 grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start),
    .ap_done(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_done),
    .ap_idle(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_idle),
    .ap_ready(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_ready),
    .icmp_ln35(icmp_ln35_reg_227),
    .icmp_ln35_1(icmp_ln35_1_reg_232),
    .acc_out(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_acc_out),
    .acc_out_ap_vld(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_acc_out_ap_vld),
    .buffer_r_address0(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_buffer_r_address0),
    .buffer_r_ce0(grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_buffer_r_ce0),
    .buffer_r_q0(buffer_r_q0)
);

filter_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .sample_in(sample_in),
    .sample_out(sample_out),
    .sample_out_ap_vld(sample_out_ap_vld),
    .filter_type(filter_type),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start_reg <= 1'b1;
        end else if ((grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_ready == 1'b1)) begin
            grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start_reg <= 1'b1;
        end else if ((grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_ready == 1'b1)) begin
            grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        filter_type_read_reg_221 <= filter_type;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln35_1_reg_232 <= icmp_ln35_1_fu_201_p2;
        icmp_ln35_reg_227 <= icmp_ln35_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        index <= select_ln50_fu_181_p3;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buffer_r_address0 = grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_buffer_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_r_address0 = grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_address0;
    end else begin
        buffer_r_address0 = 2'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buffer_r_ce0 = grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_buffer_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_r_ce0 = grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_ce0;
    end else begin
        buffer_r_ce0 = buffer_r_ce0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buffer_r_ce0_local = 1'b1;
    end else begin
        buffer_r_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_r_d0 = grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_d0;
    end else begin
        buffer_r_d0 = sample_in;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_r_we0 = grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_buffer_r_we0;
    end else begin
        buffer_r_we0 = buffer_r_we0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buffer_r_we0_local = 1'b1;
    end else begin
        buffer_r_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_out_ap_vld = 1'b1;
    end else begin
        sample_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln50_fu_131_p2 = ($signed(sext_ln50_fu_127_p1) + $signed(4'd1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start = grp_filter_Pipeline_VITIS_LOOP_29_1_fu_108_ap_start_reg;

assign grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start = grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_ap_start_reg;

assign icmp_ln35_1_fu_201_p2 = ((filter_type_read_reg_221 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_195_p2 = ((filter_type_read_reg_221 == 2'd1) ? 1'b1 : 1'b0);

assign p_and_t_fu_159_p3 = {{1'd0}, {xor_ln50_fu_153_p2}};

assign sample_out = grp_filter_Pipeline_VITIS_LOOP_44_2_fu_114_acc_out;

assign select_ln50_fu_181_p3 = ((tmp_fu_137_p3[0:0] == 1'b1) ? sub_ln50_fu_167_p2 : tmp_6_fu_173_p3);

assign sext_ln50_fu_127_p0 = index;

assign sext_ln50_fu_127_p1 = sext_ln50_fu_127_p0;

assign sub_ln50_fu_167_p2 = (3'd0 - p_and_t_fu_159_p3);

assign tmp_6_fu_173_p3 = {{1'd0}, {trunc_ln50_fu_145_p1}};

assign tmp_fu_137_p3 = add_ln50_fu_131_p2[32'd3];

assign trunc_ln50_1_fu_149_p0 = index;

assign trunc_ln50_1_fu_149_p1 = trunc_ln50_1_fu_149_p0[1:0];

assign trunc_ln50_fu_145_p1 = add_ln50_fu_131_p2[1:0];

assign xor_ln50_fu_153_p2 = (trunc_ln50_1_fu_149_p1 ^ 2'd3);

endmodule //filter
