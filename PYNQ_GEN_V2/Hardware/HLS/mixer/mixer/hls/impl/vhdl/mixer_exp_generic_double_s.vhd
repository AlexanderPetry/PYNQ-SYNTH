-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mixer_exp_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of mixer_exp_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv71_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (70 downto 0) := "10110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv58_10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

attribute shreg_extract : string;
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal es_sign_fu_286_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal es_sign_reg_1116_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1116_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1121_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1129_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln227_fu_364_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln227_reg_1135 : STD_LOGIC_VECTOR (70 downto 0);
    signal tmp_fu_368_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1140 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln229_1_fu_394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln229_1_reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fix_l_reg_1150 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_reg_1156 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1156_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln255_fu_454_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1166 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1166_pp0_iter1_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1166_pp0_iter2_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1166_pp0_iter3_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal icmp_ln309_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1171_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1179_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1184_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_fu_555_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1194 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1194_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1194_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1194_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1194_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1194_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal m_diff_hi_reg_1201 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1201_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1201_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1206 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1206_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1206_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1206_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_reg_1213 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_reg_1213_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_fu_620_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_1219 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_1219_pp0_iter5_reg : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_ind_reg_1224 : STD_LOGIC_VECTOR (7 downto 0);
    signal exp_Z4_m_1_fu_659_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z4_m_1_reg_1239 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z3_m_1_fu_665_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal exp_Z3_m_1_reg_1244 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_9_reg_1249 : STD_LOGIC_VECTOR (19 downto 0);
    signal exp_Z2P_m_1_fu_717_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_reg_1264 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_s_fu_723_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_s_reg_1269 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_reg_1274 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_reg_1279 : STD_LOGIC_VECTOR (57 downto 0);
    signal mul_ln297_fu_278_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal mul_ln297_reg_1284 : STD_LOGIC_VECTOR (99 downto 0);
    signal zext_ln114_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln119_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln292_fu_698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1_local : STD_LOGIC;
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local : STD_LOGIC;
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local : STD_LOGIC;
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local : STD_LOGIC;
    signal mul_ln123_fu_270_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln123_fu_270_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln142_fu_274_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal mul_ln142_fu_274_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln297_fu_278_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal mul_ln297_fu_278_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal data_fu_282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal es_exp_fu_294_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal es_sig_fu_304_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln486_fu_320_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal e_frac_fu_330_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln221_fu_338_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_1_fu_342_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_3_fu_348_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal m_frac_l_1_fu_356_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_exp_fu_324_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln229_fu_376_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln229_fu_382_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln229_fu_386_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln229_fu_398_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal ashr_ln229_fu_402_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal shl_ln229_fu_408_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_fu_414_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_hi_fu_432_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln230_fu_472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln230_fu_475_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ashr_ln230_fu_480_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln230_fu_485_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2_fu_492_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal shl_ln_fu_505_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1105_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln243_fu_532_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_cast_fu_516_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln243_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln243_1_fu_541_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_fu_525_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln243_fu_547_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln249_fu_265_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal tmp_8_fu_567_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal and_ln_fu_577_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal sub_ln255_fu_585_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal f_Z4_fu_642_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln115_fu_652_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln115_1_fu_655_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln123_fu_270_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln126_1_fu_705_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln126_fu_708_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln126_fu_713_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln120_fu_702_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2_m_1_fu_733_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal mul_ln142_fu_274_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal and_ln1_fu_762_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln145_2_fu_776_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln145_fu_779_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln145_1_fu_784_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln145_fu_772_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_fu_788_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1_hi_fu_804_p4 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1P_m_1_fu_794_p4 : STD_LOGIC_VECTOR (49 downto 0);
    signal xor_ln182_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln182_1_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln182_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln185_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_fu_849_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln297_fu_871_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal shl_ln1_fu_876_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln297_2_fu_884_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal add_ln297_1_fu_887_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_5_fu_893_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_1_fu_901_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_2_fu_906_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_fu_913_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln309_1_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln336_fu_947_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_fu_957_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_6_fu_967_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal out_exp_fu_951_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln303_fu_977_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal t_fu_985_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln309_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln309_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_1_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln309_1_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_1_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln309_1_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln309_2_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_3_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln309_2_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln309_3_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_4_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln326_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_2_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_5_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_fu_1081_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_1_fu_1081_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_1_fu_1081_p8 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_1_fu_1081_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_1_fu_1081_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1105_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal retval_1_fu_1081_p11 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_int_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln123_fu_270_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln123_fu_270_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln142_fu_274_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal mul_ln142_fu_274_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal mul_ln297_fu_278_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal mul_ln297_fu_278_p10 : STD_LOGIC_VECTOR (99 downto 0);
    signal retval_1_fu_1081_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal retval_1_fu_1081_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal retval_1_fu_1081_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal retval_1_fu_1081_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component mixer_mul_13s_71s_71_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (70 downto 0);
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component mixer_mul_43ns_36ns_79_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component mixer_mul_49ns_44ns_93_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component mixer_mul_50ns_50ns_100_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component mixer_sparsemux_9_3_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        def : IN STD_LOGIC_VECTOR (63 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component mixer_mac_muladd_16s_15ns_19s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component mixer_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component mixer_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component mixer_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_U : component mixer_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_address0,
        ce0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local,
        q0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0);

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_U : component mixer_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0,
        ce0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local,
        q0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0,
        address1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address1,
        ce1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1_local,
        q1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q1);

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_U : component mixer_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0,
        ce0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local,
        q0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0);

    mul_13s_71s_71_1_1_U1 : component mixer_mul_13s_71s_71_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 71,
        dout_WIDTH => 71)
    port map (
        din0 => r_exp_reg_1194,
        din1 => ap_const_lv71_58B90BFBE8E7BCD5E4,
        dout => mul_ln249_fu_265_p2);

    mul_43ns_36ns_79_1_1_U2 : component mixer_mul_43ns_36ns_79_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        din0 => mul_ln123_fu_270_p0,
        din1 => mul_ln123_fu_270_p1,
        dout => mul_ln123_fu_270_p2);

    mul_49ns_44ns_93_1_1_U3 : component mixer_mul_49ns_44ns_93_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        din0 => mul_ln142_fu_274_p0,
        din1 => mul_ln142_fu_274_p1,
        dout => mul_ln142_fu_274_p2);

    mul_50ns_50ns_100_1_1_U4 : component mixer_mul_50ns_50ns_100_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        din0 => mul_ln297_fu_278_p0,
        din1 => mul_ln297_fu_278_p1,
        dout => mul_ln297_fu_278_p2);

    sparsemux_9_3_64_1_1_U5 : component mixer_sparsemux_9_3_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100",
        din0_WIDTH => 64,
        CASE1 => "010",
        din1_WIDTH => 64,
        CASE2 => "001",
        din2_WIDTH => 64,
        CASE3 => "000",
        din3_WIDTH => 64,
        def_WIDTH => 64,
        sel_WIDTH => 3,
        dout_WIDTH => 64)
    port map (
        din0 => retval_1_fu_1081_p2,
        din1 => retval_1_fu_1081_p4,
        din2 => ap_const_lv64_0,
        din3 => retval_1_fu_1081_p8,
        def => retval_1_fu_1081_p9,
        sel => retval_1_fu_1081_p10,
        dout => retval_1_fu_1081_p11);

    mac_muladd_16s_15ns_19s_31_4_1_U6 : component mixer_mac_muladd_16s_15ns_19s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_fu_432_p4,
        din1 => grp_fu_1105_p1,
        din2 => shl_ln_fu_505_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1105_p3);





    x_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            x_int_reg <= x;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_reg_1206 <= sub_ln255_fu_585_p2(50 downto 43);
                Z2_reg_1206_pp0_iter5_reg <= Z2_reg_1206;
                Z2_reg_1206_pp0_iter6_reg <= Z2_reg_1206_pp0_iter5_reg;
                Z2_reg_1206_pp0_iter7_reg <= Z2_reg_1206_pp0_iter6_reg;
                Z3_reg_1213 <= sub_ln255_fu_585_p2(42 downto 35);
                Z3_reg_1213_pp0_iter5_reg <= Z3_reg_1213;
                Z4_ind_reg_1224 <= sub_ln255_fu_585_p2(34 downto 27);
                Z4_reg_1219 <= Z4_fu_620_p1;
                Z4_reg_1219_pp0_iter5_reg <= Z4_reg_1219;
                es_sign_reg_1116 <= data_fu_282_p1(63 downto 63);
                es_sign_reg_1116_pp0_iter1_reg <= es_sign_reg_1116;
                es_sign_reg_1116_pp0_iter2_reg <= es_sign_reg_1116_pp0_iter1_reg;
                es_sign_reg_1116_pp0_iter3_reg <= es_sign_reg_1116_pp0_iter2_reg;
                es_sign_reg_1116_pp0_iter4_reg <= es_sign_reg_1116_pp0_iter3_reg;
                es_sign_reg_1116_pp0_iter5_reg <= es_sign_reg_1116_pp0_iter4_reg;
                es_sign_reg_1116_pp0_iter6_reg <= es_sign_reg_1116_pp0_iter5_reg;
                es_sign_reg_1116_pp0_iter7_reg <= es_sign_reg_1116_pp0_iter6_reg;
                es_sign_reg_1116_pp0_iter8_reg <= es_sign_reg_1116_pp0_iter7_reg;
                exp_Z1_reg_1279 <= table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0;
                exp_Z2P_m_1_reg_1264 <= exp_Z2P_m_1_fu_717_p2;
                    exp_Z3_m_1_reg_1244(25 downto 0) <= exp_Z3_m_1_fu_665_p4(25 downto 0);    exp_Z3_m_1_reg_1244(42 downto 35) <= exp_Z3_m_1_fu_665_p4(42 downto 35);
                exp_Z4_m_1_reg_1239 <= exp_Z4_m_1_fu_659_p2;
                icmp_ln18_1_reg_1129 <= icmp_ln18_1_fu_314_p2;
                icmp_ln18_1_reg_1129_pp0_iter1_reg <= icmp_ln18_1_reg_1129;
                icmp_ln18_1_reg_1129_pp0_iter2_reg <= icmp_ln18_1_reg_1129_pp0_iter1_reg;
                icmp_ln18_1_reg_1129_pp0_iter3_reg <= icmp_ln18_1_reg_1129_pp0_iter2_reg;
                icmp_ln18_1_reg_1129_pp0_iter4_reg <= icmp_ln18_1_reg_1129_pp0_iter3_reg;
                icmp_ln18_1_reg_1129_pp0_iter5_reg <= icmp_ln18_1_reg_1129_pp0_iter4_reg;
                icmp_ln18_1_reg_1129_pp0_iter6_reg <= icmp_ln18_1_reg_1129_pp0_iter5_reg;
                icmp_ln18_1_reg_1129_pp0_iter7_reg <= icmp_ln18_1_reg_1129_pp0_iter6_reg;
                icmp_ln18_1_reg_1129_pp0_iter8_reg <= icmp_ln18_1_reg_1129_pp0_iter7_reg;
                icmp_ln18_reg_1121 <= icmp_ln18_fu_308_p2;
                icmp_ln18_reg_1121_pp0_iter1_reg <= icmp_ln18_reg_1121;
                icmp_ln18_reg_1121_pp0_iter2_reg <= icmp_ln18_reg_1121_pp0_iter1_reg;
                icmp_ln18_reg_1121_pp0_iter3_reg <= icmp_ln18_reg_1121_pp0_iter2_reg;
                icmp_ln18_reg_1121_pp0_iter4_reg <= icmp_ln18_reg_1121_pp0_iter3_reg;
                icmp_ln18_reg_1121_pp0_iter5_reg <= icmp_ln18_reg_1121_pp0_iter4_reg;
                icmp_ln18_reg_1121_pp0_iter6_reg <= icmp_ln18_reg_1121_pp0_iter5_reg;
                icmp_ln18_reg_1121_pp0_iter7_reg <= icmp_ln18_reg_1121_pp0_iter6_reg;
                icmp_ln18_reg_1121_pp0_iter8_reg <= icmp_ln18_reg_1121_pp0_iter7_reg;
                icmp_ln309_2_reg_1184 <= icmp_ln309_2_fu_500_p2;
                icmp_ln309_2_reg_1184_pp0_iter2_reg <= icmp_ln309_2_reg_1184;
                icmp_ln309_2_reg_1184_pp0_iter3_reg <= icmp_ln309_2_reg_1184_pp0_iter2_reg;
                icmp_ln309_2_reg_1184_pp0_iter4_reg <= icmp_ln309_2_reg_1184_pp0_iter3_reg;
                icmp_ln309_2_reg_1184_pp0_iter5_reg <= icmp_ln309_2_reg_1184_pp0_iter4_reg;
                icmp_ln309_2_reg_1184_pp0_iter6_reg <= icmp_ln309_2_reg_1184_pp0_iter5_reg;
                icmp_ln309_2_reg_1184_pp0_iter7_reg <= icmp_ln309_2_reg_1184_pp0_iter6_reg;
                icmp_ln309_2_reg_1184_pp0_iter8_reg <= icmp_ln309_2_reg_1184_pp0_iter7_reg;
                icmp_ln309_reg_1171 <= icmp_ln309_fu_458_p2;
                icmp_ln309_reg_1171_pp0_iter1_reg <= icmp_ln309_reg_1171;
                icmp_ln309_reg_1171_pp0_iter2_reg <= icmp_ln309_reg_1171_pp0_iter1_reg;
                icmp_ln309_reg_1171_pp0_iter3_reg <= icmp_ln309_reg_1171_pp0_iter2_reg;
                icmp_ln309_reg_1171_pp0_iter4_reg <= icmp_ln309_reg_1171_pp0_iter3_reg;
                icmp_ln309_reg_1171_pp0_iter5_reg <= icmp_ln309_reg_1171_pp0_iter4_reg;
                icmp_ln309_reg_1171_pp0_iter6_reg <= icmp_ln309_reg_1171_pp0_iter5_reg;
                icmp_ln309_reg_1171_pp0_iter7_reg <= icmp_ln309_reg_1171_pp0_iter6_reg;
                icmp_ln309_reg_1171_pp0_iter8_reg <= icmp_ln309_reg_1171_pp0_iter7_reg;
                m_diff_hi_reg_1201 <= sub_ln255_fu_585_p2(58 downto 51);
                m_diff_hi_reg_1201_pp0_iter5_reg <= m_diff_hi_reg_1201;
                m_diff_hi_reg_1201_pp0_iter6_reg <= m_diff_hi_reg_1201_pp0_iter5_reg;
                m_fix_l_reg_1150 <= m_fix_fu_414_p3(70 downto 7);
                mul_ln297_reg_1284 <= mul_ln297_fu_278_p2;
                r_exp_reg_1194 <= r_exp_fu_555_p3;
                r_exp_reg_1194_pp0_iter4_reg <= r_exp_reg_1194;
                r_exp_reg_1194_pp0_iter5_reg <= r_exp_reg_1194_pp0_iter4_reg;
                r_exp_reg_1194_pp0_iter6_reg <= r_exp_reg_1194_pp0_iter5_reg;
                r_exp_reg_1194_pp0_iter7_reg <= r_exp_reg_1194_pp0_iter6_reg;
                r_exp_reg_1194_pp0_iter8_reg <= r_exp_reg_1194_pp0_iter7_reg;
                    sext_ln227_reg_1135(70 downto 7) <= sext_ln227_fu_364_p1(70 downto 7);
                sext_ln229_1_reg_1145 <= sext_ln229_1_fu_394_p1;
                tmp_10_reg_1179 <= e_frac_3_fu_348_p3(53 downto 53);
                tmp_10_reg_1179_pp0_iter1_reg <= tmp_10_reg_1179;
                tmp_10_reg_1179_pp0_iter2_reg <= tmp_10_reg_1179_pp0_iter1_reg;
                tmp_10_reg_1179_pp0_iter3_reg <= tmp_10_reg_1179_pp0_iter2_reg;
                tmp_10_reg_1179_pp0_iter4_reg <= tmp_10_reg_1179_pp0_iter3_reg;
                tmp_10_reg_1179_pp0_iter5_reg <= tmp_10_reg_1179_pp0_iter4_reg;
                tmp_10_reg_1179_pp0_iter6_reg <= tmp_10_reg_1179_pp0_iter5_reg;
                tmp_10_reg_1179_pp0_iter7_reg <= tmp_10_reg_1179_pp0_iter6_reg;
                tmp_10_reg_1179_pp0_iter8_reg <= tmp_10_reg_1179_pp0_iter7_reg;
                tmp_1_reg_1156 <= m_fix_fu_414_p3(70 downto 70);
                tmp_1_reg_1156_pp0_iter1_reg <= tmp_1_reg_1156;
                tmp_3_reg_1274 <= mul_ln142_fu_274_p2(92 downto 57);
                tmp_9_reg_1249 <= mul_ln123_fu_270_p2(78 downto 59);
                tmp_reg_1140 <= m_exp_fu_324_p2(11 downto 11);
                tmp_s_reg_1269 <= table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0(41 downto 2);
                trunc_ln255_reg_1166 <= trunc_ln255_fu_454_p1;
                trunc_ln255_reg_1166_pp0_iter1_reg <= trunc_ln255_reg_1166;
                trunc_ln255_reg_1166_pp0_iter2_reg <= trunc_ln255_reg_1166_pp0_iter1_reg;
                trunc_ln255_reg_1166_pp0_iter3_reg <= trunc_ln255_reg_1166_pp0_iter2_reg;
            end if;
        end if;
    end process;
    sext_ln227_reg_1135(6 downto 0) <= "0000000";
    exp_Z3_m_1_reg_1244(34 downto 26) <= "000000000";
    Z4_fu_620_p1 <= sub_ln255_fu_585_p2(35 - 1 downto 0);
    add_ln126_fu_708_p2 <= std_logic_vector(unsigned(exp_Z4_m_1_reg_1239) + unsigned(zext_ln126_1_fu_705_p1));
    add_ln145_fu_779_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_reg_1264) + unsigned(zext_ln145_2_fu_776_p1));
    add_ln243_1_fu_541_p2 <= std_logic_vector(unsigned(tmp_9_cast_fu_516_p4) + unsigned(ap_const_lv13_1));
    add_ln297_1_fu_887_p2 <= std_logic_vector(unsigned(shl_ln1_fu_876_p3) + unsigned(zext_ln297_2_fu_884_p1));
    add_ln297_fu_871_p2 <= std_logic_vector(unsigned(exp_Z1_reg_1279) + unsigned(ap_const_lv58_10));
    and_ln182_1_fu_829_p2 <= (xor_ln182_fu_824_p2 and icmp_ln18_1_reg_1129_pp0_iter8_reg);
    and_ln182_fu_834_p2 <= (icmp_ln18_reg_1121_pp0_iter8_reg and and_ln182_1_fu_829_p2);
    and_ln18_fu_844_p2 <= (xor_ln18_fu_839_p2 and icmp_ln18_reg_1121_pp0_iter8_reg);
    and_ln1_fu_762_p5 <= (((Z2_reg_1206_pp0_iter7_reg & ap_const_lv1_0) & tmp_s_reg_1269) & ap_const_lv2_0);
    and_ln309_1_fu_1009_p2 <= (xor_ln309_fu_1004_p2 and icmp_ln309_1_fu_923_p2);
    and_ln309_2_fu_1026_p2 <= (xor_ln18_1_fu_1021_p2 and or_ln309_1_fu_1015_p2);
    and_ln309_3_fu_1038_p2 <= (xor_ln309_1_fu_1032_p2 and icmp_ln309_reg_1171_pp0_iter8_reg);
    and_ln309_4_fu_1060_p2 <= (xor_ln18_1_fu_1021_p2 and or_ln309_3_fu_1054_p2);
    and_ln309_5_fu_1066_p2 <= (icmp_ln326_fu_941_p2 and and_ln309_4_fu_1060_p2);
    and_ln309_fu_999_p2 <= (or_ln309_fu_929_p2 and icmp_ln309_reg_1171_pp0_iter8_reg);
    and_ln_fu_577_p3 <= (tmp_8_fu_567_p4 & ap_const_lv1_0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= retval_1_fu_1081_p11;
    ashr_ln229_fu_402_p2 <= std_logic_vector(shift_right(signed(sext_ln227_fu_364_p1),to_integer(unsigned('0' & zext_ln229_fu_398_p1(31-1 downto 0)))));
    ashr_ln230_fu_480_p2 <= std_logic_vector(shift_right(signed(m_fix_l_reg_1150),to_integer(unsigned('0' & zext_ln230_fu_472_p1(31-1 downto 0)))));
    data_fu_282_p1 <= x_int_reg;
    e_frac_1_fu_342_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln221_fu_338_p1));
    e_frac_3_fu_348_p3 <= 
        e_frac_1_fu_342_p2 when (es_sign_fu_286_p3(0) = '1') else 
        zext_ln221_fu_338_p1;
    e_frac_fu_330_p3 <= (ap_const_lv1_1 & es_sig_fu_304_p1);
    es_exp_fu_294_p4 <= data_fu_282_p1(62 downto 52);
    es_sig_fu_304_p1 <= data_fu_282_p1(52 - 1 downto 0);
    es_sign_fu_286_p3 <= data_fu_282_p1(63 downto 63);
    exp_Z1P_m_1_fu_794_p4 <= exp_Z1P_m_1_l_fu_788_p2(51 downto 2);
    exp_Z1P_m_1_l_fu_788_p2 <= std_logic_vector(unsigned(zext_ln145_1_fu_784_p1) + unsigned(zext_ln145_fu_772_p1));
    exp_Z1_hi_fu_804_p4 <= table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0(57 downto 8);
    exp_Z2P_m_1_fu_717_p2 <= std_logic_vector(unsigned(zext_ln126_fu_713_p1) + unsigned(zext_ln120_fu_702_p1));
    exp_Z2_m_1_fu_733_p4 <= ((Z2_reg_1206_pp0_iter6_reg & ap_const_lv1_0) & tmp_s_fu_723_p4);
    exp_Z3_m_1_fu_665_p4 <= ((Z3_reg_1213_pp0_iter5_reg & ap_const_lv9_0) & table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0);
    exp_Z4_m_1_fu_659_p2 <= std_logic_vector(unsigned(zext_ln115_fu_652_p1) + unsigned(zext_ln115_1_fu_655_p1));
    f_Z4_fu_642_p4 <= table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q1(25 downto 16);
    grp_fu_1105_p1 <= ap_const_lv31_5C55(15 - 1 downto 0);
    icmp_ln18_1_fu_314_p2 <= "1" when (es_sig_fu_304_p1 = ap_const_lv52_0) else "0";
    icmp_ln18_fu_308_p2 <= "1" when (es_exp_fu_294_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln243_fu_535_p2 <= "0" when (trunc_ln243_fu_532_p1 = ap_const_lv18_0) else "1";
    icmp_ln309_1_fu_923_p2 <= "1" when (signed(tmp_7_fu_913_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln309_2_fu_500_p2 <= "0" when (shl_ln2_fu_492_p3 = sext_ln227_reg_1135) else "1";
    icmp_ln309_fu_458_p2 <= "1" when (signed(m_exp_fu_324_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln326_fu_941_p2 <= "1" when (signed(r_exp_2_fu_906_p3) < signed(ap_const_lv13_1C02)) else "0";
    m_exp_fu_324_p2 <= std_logic_vector(unsigned(zext_ln486_fu_320_p1) + unsigned(ap_const_lv12_C01));
    m_fix_fu_414_p3 <= 
        ashr_ln229_fu_402_p2 when (tmp_fu_368_p3(0) = '1') else 
        shl_ln229_fu_408_p2;
    m_fix_hi_fu_432_p4 <= m_fix_fu_414_p3(70 downto 55);
    m_frac_l_1_fu_356_p3 <= (e_frac_3_fu_348_p3 & ap_const_lv7_0);
    mul_ln123_fu_270_p0 <= mul_ln123_fu_270_p00(43 - 1 downto 0);
    mul_ln123_fu_270_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z3_m_1_fu_665_p4),79));
    mul_ln123_fu_270_p1 <= mul_ln123_fu_270_p10(36 - 1 downto 0);
    mul_ln123_fu_270_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z4_m_1_fu_659_p2),79));
    mul_ln142_fu_274_p0 <= mul_ln142_fu_274_p00(49 - 1 downto 0);
    mul_ln142_fu_274_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2_m_1_fu_733_p4),93));
    mul_ln142_fu_274_p1 <= mul_ln142_fu_274_p10(44 - 1 downto 0);
    mul_ln142_fu_274_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_fu_717_p2),93));
    mul_ln297_fu_278_p0 <= mul_ln297_fu_278_p00(50 - 1 downto 0);
    mul_ln297_fu_278_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_fu_794_p4),100));
    mul_ln297_fu_278_p1 <= mul_ln297_fu_278_p10(50 - 1 downto 0);
    mul_ln297_fu_278_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_fu_804_p4),100));
    or_ln185_fu_857_p2 <= (and_ln18_fu_844_p2 or and_ln182_fu_834_p2);
    or_ln309_1_fu_1015_p2 <= (and_ln309_fu_999_p2 or and_ln309_1_fu_1009_p2);
    or_ln309_2_fu_1043_p2 <= (icmp_ln309_reg_1171_pp0_iter8_reg or icmp_ln309_1_fu_923_p2);
    or_ln309_3_fu_1054_p2 <= (xor_ln309_2_fu_1048_p2 or and_ln309_3_fu_1038_p2);
    or_ln309_fu_929_p2 <= (icmp_ln309_2_reg_1184_pp0_iter8_reg or icmp_ln309_1_fu_923_p2);
    out_exp_fu_951_p2 <= std_logic_vector(unsigned(trunc_ln336_fu_947_p1) + unsigned(ap_const_lv11_3FF));
    r_exp_1_fu_901_p2 <= std_logic_vector(signed(r_exp_reg_1194_pp0_iter8_reg) + signed(ap_const_lv13_1FFF));
    r_exp_2_fu_906_p3 <= 
        r_exp_reg_1194_pp0_iter8_reg when (tmp_5_fu_893_p3(0) = '1') else 
        r_exp_1_fu_901_p2;
    r_exp_fu_555_p3 <= 
        select_ln243_fu_547_p3 when (tmp_2_fu_525_p3(0) = '1') else 
        tmp_9_cast_fu_516_p4;
    retval_1_fu_1081_p10 <= ((icmp_ln18_reg_1121_pp0_iter8_reg & and_ln309_2_fu_1026_p2) & and_ln309_5_fu_1066_p2);
    retval_1_fu_1081_p2 <= 
        select_ln18_fu_849_p3 when (or_ln185_fu_857_p2(0) = '1') else 
        ap_const_lv64_0;
    retval_1_fu_1081_p4 <= 
        ap_const_lv64_0 when (tmp_10_reg_1179_pp0_iter8_reg(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    retval_1_fu_1081_p8 <= t_fu_985_p4;
    retval_1_fu_1081_p9 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    select_ln18_fu_849_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (and_ln18_fu_844_p2(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln229_fu_386_p3 <= 
        sext_ln229_fu_382_p1 when (tmp_fu_368_p3(0) = '1') else 
        m_exp_fu_324_p2;
    select_ln230_fu_485_p3 <= 
        shl_ln230_fu_475_p2 when (tmp_reg_1140(0) = '1') else 
        ashr_ln230_fu_480_p2;
    select_ln243_fu_547_p3 <= 
        add_ln243_1_fu_541_p2 when (icmp_ln243_fu_535_p2(0) = '1') else 
        tmp_9_cast_fu_516_p4;
    select_ln303_fu_977_p3 <= 
        tmp_4_fu_957_p4 when (tmp_5_fu_893_p3(0) = '1') else 
        tmp_6_fu_967_p4;
        sext_ln227_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_1_fu_356_p3),71));

        sext_ln229_1_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln229_fu_386_p3),32));

        sext_ln229_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln229_fu_376_p2),12));

    shl_ln1_fu_876_p3 <= (add_ln297_fu_871_p2 & ap_const_lv49_0);
    shl_ln229_fu_408_p2 <= std_logic_vector(shift_left(unsigned(sext_ln227_fu_364_p1),to_integer(unsigned('0' & zext_ln229_fu_398_p1(31-1 downto 0)))));
    shl_ln230_fu_475_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_reg_1150),to_integer(unsigned('0' & zext_ln230_fu_472_p1(31-1 downto 0)))));
    shl_ln2_fu_492_p3 <= (select_ln230_fu_485_p3 & ap_const_lv7_0);
    shl_ln_fu_505_p3 <= (tmp_1_reg_1156_pp0_iter1_reg & ap_const_lv18_20000);
    sub_ln229_fu_376_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(es_exp_fu_294_p4));
    sub_ln255_fu_585_p2 <= std_logic_vector(unsigned(trunc_ln255_reg_1166_pp0_iter3_reg) - unsigned(and_ln_fu_577_p3));
    t_fu_985_p4 <= ((ap_const_lv1_0 & out_exp_fu_951_p2) & select_ln303_fu_977_p3);
    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_address0 <= zext_ln292_fu_698_p1(8 - 1 downto 0);

    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local <= ap_const_logic_1;
        else 
            table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 <= zext_ln138_fu_694_p1(8 - 1 downto 0);

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local <= ap_const_logic_1;
        else 
            table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 <= zext_ln119_fu_638_p1(8 - 1 downto 0);
    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address1 <= zext_ln114_fu_634_p1(8 - 1 downto 0);

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local <= ap_const_logic_1;
        else 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1_local_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1_local <= ap_const_logic_1;
        else 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_525_p3 <= grp_fu_1105_p3(30 downto 30);
    tmp_4_fu_957_p4 <= add_ln297_1_fu_887_p2(105 downto 54);
    tmp_5_fu_893_p3 <= add_ln297_1_fu_887_p2(106 downto 106);
    tmp_6_fu_967_p4 <= add_ln297_1_fu_887_p2(104 downto 53);
    tmp_7_fu_913_p4 <= r_exp_2_fu_906_p3(12 downto 10);
    tmp_8_fu_567_p4 <= mul_ln249_fu_265_p2(70 downto 13);
    tmp_9_cast_fu_516_p4 <= grp_fu_1105_p3(30 downto 18);
    tmp_fu_368_p3 <= m_exp_fu_324_p2(11 downto 11);
    tmp_s_fu_723_p4 <= table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0(41 downto 2);
    trunc_ln243_fu_532_p1 <= grp_fu_1105_p3(18 - 1 downto 0);
    trunc_ln255_fu_454_p1 <= m_fix_fu_414_p3(59 - 1 downto 0);
    trunc_ln336_fu_947_p1 <= r_exp_2_fu_906_p3(11 - 1 downto 0);
    xor_ln182_fu_824_p2 <= (es_sign_reg_1116_pp0_iter8_reg xor ap_const_lv1_1);
    xor_ln18_1_fu_1021_p2 <= (icmp_ln18_reg_1121_pp0_iter8_reg xor ap_const_lv1_1);
    xor_ln18_fu_839_p2 <= (icmp_ln18_1_reg_1129_pp0_iter8_reg xor ap_const_lv1_1);
    xor_ln309_1_fu_1032_p2 <= (or_ln309_fu_929_p2 xor ap_const_lv1_1);
    xor_ln309_2_fu_1048_p2 <= (or_ln309_2_fu_1043_p2 xor ap_const_lv1_1);
    xor_ln309_fu_1004_p2 <= (icmp_ln309_reg_1171_pp0_iter8_reg xor ap_const_lv1_1);
    zext_ln114_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_reg_1224),64));
    zext_ln115_1_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_Z4_fu_642_p4),36));
    zext_ln115_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_reg_1219_pp0_iter5_reg),36));
    zext_ln119_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_reg_1213),64));
    zext_ln120_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z3_m_1_reg_1244),44));
    zext_ln126_1_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1249),36));
    zext_ln126_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln126_fu_708_p2),44));
    zext_ln138_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_reg_1206_pp0_iter5_reg),64));
    zext_ln145_1_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln145_fu_779_p2),52));
    zext_ln145_2_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1274),44));
    zext_ln145_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln1_fu_762_p5),52));
    zext_ln221_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e_frac_fu_330_p3),54));
    zext_ln229_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln229_1_fu_394_p1),71));
    zext_ln230_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln229_1_reg_1145),64));
    zext_ln292_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_reg_1201_pp0_iter6_reg),64));
    zext_ln297_2_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln297_reg_1284),107));
    zext_ln486_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(es_exp_fu_294_p4),12));
end behav;
